== Die Leistungsfähigkeit der Organisation erhalten

In der Einführung wurde darauf hingewiesen, dass _Trusted Committers_ sowohl technikorientierte als auch organisationsorientierte Verantwortlichkeiten haben.
Es ist nicht ausreichend, sich nur auf den _Code_ und den Zustand des _Codes_ zu konzentrieren. Um auf lange Sicht erfolgreich zu sein, sollten _Trusted Committer_ auch danach streben, die 
Leistungsfähigkeit und Motivation der Organisation, welche die Software erstellt, aufrechtzuerhalten. 
Deshalb müssen sie sich um eine gute Balance zwischen dem Sicherstellen der Produktqualität und der Weiterentwicklung der Organisation bemühen.

Was macht eine gute Organisation aus? Sehr einfach, in einer guten Organisation neigen die https://innersourcecommons.org/resources/learningpath/contributor/index[_Contributors_] dazu dabeizubleiben, 
sie können den Großteil ihrer Zeit nutzen, um Software zu entwickeln, und sind in der Lage, ihre Fähigkeiten zu verbessern.
Infolgedessen wird sich eine gute Organisation kontinuierlich selbst verbessern.

Warum schließen sich https://innersourcecommons.org/resources/learningpath/contributor/index[_Contributors_] einer Organisation an und bleiben dabei?
Einige tun dies, weil sie sich dem Zweck oder der Mission der Organisation anschließen. Es ist die Aufgabe des _Trusted Committers_, diesen Zweck klar zu formulieren und voranzutreiben.
Dessen Bedeutung wird oft nicht erkannt, aber die Pflege einer Organisation und ihrer Produkte ist tatsächlich entscheidend.

Ein weiterer, offensichtlicher Grund für jemanden dabeizubleiben ist, dass er die Zusammenarbeit mit anderen Mitgliedern der Organisation genießen, einschließlich der _Trusted Committers_.
Eine gedeihende Organisation ist eine, deren Mitglieder sich gegenseitig mit dem höchsten Respekt behandeln und miteinander kommunizieren.
Beiträge werden mehr wie Geschenke oder Spenden denn als Ablenkungen behandelt, und sehr gute Beiträge (insbesondere erste) werden gelobt.
Die Aufgabe des _Trusted Committers_ besteht in erster Linie darin, ein Vorbild für andere zu sein, analog zu einem Vorbild bezüglich der erwarteten Softwarequalität zu sein.
Falls notwendig, sollten die _Trusted Committers_ einen Verhaltenskodex entwerfen und beschließen. Falls sich Mitglieder der Organisation entgegen den Regeln der Organisation oder gar schädigend verhalten,
ist es die Aufgabe des _Trusted Committers_, dies anzusprechen. _Trusted Committers_ sollten Möglichkeiten für Zusammenkünfte der Mitglieder bieten, dafür sorgen, sich gegenseitig kennenzulernen und auftretende
Konflikte einvernehmlich zu lösen.

Menschen neigen auch dazu sich zu beteiligen, weil die Mitarbeit in einer _InnerSource Community_ eine hervorragende Gelegenheit bietet, neue Fähigkeiten zu erlernen und persönlich zu wachsen.
Auch dies ist ein Aspekt, in dem die Rolle des _Trusted Committers_ wirklich wichtig ist.
_Trusted Committers_ sind oft Mentoren für jüngere Entwickler, und verwenden ausdrücklich Zeit während der Pull Requests, um nicht nur auf Verbesserungspotentiale hinzuweisen, sondern auch im Detail zu erklären, warum und wie etwas
verbessert werden muss. Sie liefern die Theorie oder das Hintergrundwissen zu Verbesserungen und schlagen die besten Möglichkeiten vor, Änderungen oder Verbesserungen zu implementieren.
Dadurch können _Trusted Committers_ die Lerngeschwindigkeit ihrer Organisation weit über die traditioneller Software-Entwicklungsorganisationen erhöhen.

Wir glauben, dass _Trusted Committers_ das Anwerben und Betreuen während der Pull Requests über das Erreichen von Veröffentlichungsterminen stellen sollten, außer es sprechen triftige Gründe dagegen.
Gute Betreuung während eines Pull Requests führt zu höherem Vertrauen und Einbindung von https://innersourcecommons.org/resources/learningpath/contributor/index[_Contributors_], was im Gegenzug zu mehr Mitarbeit führt.
Wir werden das in https://innersourcecommons.org/resources/learningpath/trusted-committer/04/["Upleveling the Community"] näher betrachten.

Schlussendlich gibt es Menschen, die sich in _InnerSource Communities_ engagieren, weil sie sich dort auf das Entwickeln von Software konzentrieren können, anstatt Aufgaben nachzugehen, die häufig als überflüssig oder unnötig angesehen werden.
Dies trifft häufig auf große Unternehmen mit einem starken Fokus auf Prozesse zu.
Die Aufgabe des _Trusted Committers_ in diesem Zusammenhang ist es, sicherzustellen dass die https://innersourcecommons.org/resources/learningpath/contributor/index[_Contributors_] sich auf ihre Projekte konzentrieren können, indem sie
sinnvolle Richtlinien für die Mitarbeit kommunizieren und einsetzen.

Ein wichtiger Aspekt dieser Richtlinien ist, was wir in Pull Requests  _signaling_ nennen: Wie soll ein Kommentar aussehen? Was bedeutet es, wenn ich einen Kommentar "_like_" oder "_+1_" vergebe?
Wie unterscheidet sich beim _@mentioning_ die Verwendung eines _/CC_-Vorzeichens von einem _/FYI_-Vorzeichen? Allgemein gesprochen müssen _Trusted Committers_ sicherstellen, dass der Prozess, im Projekt mitzuarbeiten, nicht mehr
Probleme verursacht, sondern die Organisation unterstützt, Probleme im Projekt zu identifizeren und zu lösen. Schließlich sollten _Trusted Committers_ ihre Organisation dazu befähigen, prozessbezogene Probleme zu finden 
und diese so gut wie möglich selbst anzupassen und zu verbessern.

Damit _Trusted Committers_ alle diese Verantwortlichkeiten erfüllen können, ist es wichtig, dass sie regelmäßig mit den Mitgliedern der Organisation kommunizieren und ein Gespür für die allgemeine Stimmung entwickeln. 
Wir werden dies näher im Kapitel https://innersourcecommons.org/resources/learningpath/trusted-committer/06/["Advocating the Community's
Needs"] betrachten.

Zusammengefasst sollten _Trusted Committers_ sich bemühen, ein einladendes und annerkennendes Umfeld für ihre https://innersourcecommons.org/resources/learningpath/contributor/index[_Contributors_] zu erzeugen, welches 
diesen erlaubt, sich auf das Schreiben von Software zu konzentrieren und ihre Persönlichkeit weiterzuentwickeln, indem sie von anderen Mitgliedern der Organisation lernen.

