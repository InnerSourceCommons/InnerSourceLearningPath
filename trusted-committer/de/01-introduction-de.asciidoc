[role="pagenumrestart"]
== Einführung der Rolle des Trusted Committers

Die Rolle des _Trusted Committers_ (TC) ist eine der Schlüsselrollen einer
_InnerSource_-Organisation. Stell Dir einen _Trusted Committer_ als jemanden im Team vor, auf den Du bei wichtigen technischen Entscheidungen
 vertraust, und als einen fähigen Betreuer, der dem _Committer_ hilft, dessen Beitrage zielführend in das Produkt integrieren zu können. Die Rolle eines _Trusted Committers_
ist sowohl anspruchsvoll als auch wertgeschätzt. Sie ist mehr als nur ein bürokratischer Pförtner, im Gegenteil, sie ist maßgeblich für den Erfolg jeder _InnerSource_ Organisation.

Allgemein gesagt ist die Rolle des _Trusted Committers_ mehr durch ihre Verantwortlichkeiten als durch ihre Rechte definiert.
Auf einer höheren Ebene repräsentieren die _Trusted Committers_ sowohl die Interessen der _InnerSource_ Organisationseinheit als auch die der Produkte,
welche von der entsprechenden Organisationseinheit entwickelt werden. _Trusted Committers_ kümmern sich gleichermaßen um eine funktionierende Organisation und ein technisch einwandfreies Produkt.
 Daher umfasst die Rolle sowohl technik- als auch teamorientierte Verantwortlichkeiten.
Wir werden uns die beiden Dimensionen in den folgenden Abschnitten genauer anschauen.

Bevor wir aber in die Details gehen, was die eigentliche Aufgabe eines _Trusted Committers_ ist, wollen wir uns zunächst auf höherer Abtraktionsebene anschauen,
wie sich die Rolle des _Trusted Committers_ von den anderen Rollen in der _InnerSource_ unterscheidet und dabei erklären, warum wir glauben, dass die
Bezeichnung sowohl  passend als auch wichtig ist. Lasst uns beginnen mit der Rolle des https://innersourcecommons.org/learn/learning-path/contributor[_Contributors_]. Ein
_Contributor_ — wie schon der Name nahelegt — liefert Beiträge zu einer _InnerSource_-Organisationseinheit.
 Diese Beiträge können entweder _code_ oder andere Artefakte wie z.B. Fehlerreports, Änderungsanforderungen oder Dokumentation sein.

_Contributors_ können, müssen aber nicht Teil der Organisation sein, zu der sie Beiträge liefern. Sie können z.B. von einem anderem Team beauftragt werden, ein Feature zu entwickeln,
welches das Team benötigt. Deshalb sprechen wir im Fall von _Contributors_ manchmal auch von _Guests_ oder Teilen eines _Guest_Teams_. Der _Contributor_ ist
 verantwortlich dafür, dass er sich anpasst und die Erwartungen und Regeln der jeweiligen Organisationseinheit, zu der einen Beitrag liefert, erfüllt und respektiert.

Der _Trusted Committer_ ist immer ein Mitglied der _InnerSource_-Organisationseinheit (manchmal auch _Host Team_ genannt). In diesem Vergleich wäre der
_Trusted Committer_ sowohl für den Bau eines Hauses als auch für die Hausordnung verantwortlich, in deren Umgebung die Gäste sich wohlfühlen und effektiv
 miteinander arbeiten können. Verglichen mit den _Contributors_ haben _Trusted Committers_ sich die Verantwortlichkeit verdient, näher am produktiven Code zu
arbeiten und sind grundsätzlich befugt, Aufgaben auszuführen, die mit einem höheren Riskio verbunden sind.

Der https://innersourcecommons.org/learn/learning-path/product-owner[_Product Owner_ (PO)] ist die dritte
Rolle bei _InnerSource_. Ähnlich wie bei agilen Prozessen ist der _PO_ verantwortlich für die Definition und Priorisierung von Anforderungen und User Stories,
welche die jeweilige Organisationseinheit umsetzen soll. Der _PO_ arbeitet eng mit dem _Trusted Committer_ zusammen, z.B. um sicherzustellen, dass ein angefordertes oder bereitgestelltes Feature
 tatsächlich Bestandteil des Produkts sein soll. Speziell in kleineren _InnerSource_-Organisationen kann der _Trusted Committer_ meistens auch die Aufgaben des
PO wahrnehmen. Schau Dir für weiterführende Informationen unser https://innersourcecommons.org/learn/learning-path/product-owner[Product Owner Learning Path segment]
an.

=== Warum Rollennamen von Bedeutung sind

Man findet die Rolle des _Trusted Committers_  in jeder erfolgreichen _InnerSource_-Organisation, wenngleich die Rolle nicht in jeder Organisation so genannt
wird.
Manche Organisationen benutzen den Begriff _Maintainer_, aber diese Bezeichnung überschneidet sich mit anderen technischen Rollen, wie zum Beispiel
die in _GitHub_ definierte Role des "Maintainers". Auch Apache nutzt den Begriff des
_Committers_, aber dort wird die Rolle mit weniger und meist technisch orientierten Verantwortlichkeiten verbunden.
Durch die zusätzlichen auf die Organisation bezogenen Verantwortlichkeiten geht die hier definierte Rolle des _Trusted Committer_ weit darüber hinaus.
Der Begriff "Trusted" in _Trusted Committer_ bezieht sich auf das Vertrauen, das von der Organisation in diese Person gesetzt wird und das aus diesem heraus
sowohl vom Management als auch der Arbeitsebene getragenen Mandat, die übertragenen Aufgaben zu erfüllen. Durch Förderung von Offenheit und Transparenz schaffen
_Trusted Committers_ Vertrauen in den Prozess und ebenso in das entwickelte Produkt.

So, wie in der Softwarentwicklung Namenskonventionen wichtig sind, stellen eindeutige Namen für Rollen sicher, dass überall ein gleiches Verständnis darüber
herrscht, welche Aufgaben die jeweilige Rolle in einer Organisationseinheit wahrnimmt.

Nachdem Du nun ein grundsätzliches Verständnis von der Rolle hast, wieso der Begriff
_Trusted Committer_ angemessen ist und Du weißt, wie ein _Trusted Committer_ mit anderen Rollen in einem Software-Projekt interagiert, lass uns einen
kurzen Blick auf die Verantwortlichkeiten eines _Trusted Committers_ werfen.

=== Verantwortlickeiten

_Trusted Committers_ haben verschiedene Verantwortlichkeiten, unter anderem:

* https://innersourcecommons.org/de/learn/learning-path/trusted-committer/02/[Ensuring product quality]
* https://innersourcecommons.org/de/learn/learning-path/trusted-committer/03/[Keeping the community healthy]
* https://innersourcecommons.org/de/learn/learning-path/trusted-committer/05/[Reducing the barriers to making contributions]
* https://innersourcecommons.org/de/learn/learning-path/trusted-committer/04/[Upleveling the community]
* https://innersourcecommons.org/de/learn/learning-path/trusted-committer/06/[Advocating the community's needs]

Wir werden diese Verantwortlichkeiten in den folgenden Kapiteln weiter vertiefen, bitte schau Dir dazu auch das Kapitel https://innersourcecommons.org/de/learn/learning-path/trusted-committer/07/[07 becoming a Trusted Committer] am Ende an.
[role="pagenumrestart"]
