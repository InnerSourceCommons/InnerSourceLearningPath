== Sicherstellung der Produktqualität

Laßt uns mit der wohl am öftesten mit der Rolle des _Trusted Committers_ in 
Verbindung gebrachten Verantwortlichkeit beginnen: 
Sicherstellung der Produktqualität

In einer _InnerSource_-Organisation sind die _Trusted Committers_ verantwortlich für
alle technologisch basierten Entscheidungen, speziell derjenigen, die sich auf die Produktqualität beziehen.
Verantwortlichkeit in diesem Fall bedeutet die Notwendigkeit, sicherzustellen dass diese Entscheidungen
respektiert werden. Das schließt die Kommunikation dieser Entscheidungen, und - falls notwendig - deren Verfechtung
 innerhalb und außerhalb der Organisationseinheit mit ein. Das bedeutet aber nicht, das in Folge alle technologisch
basierten Entscheidungen von den _Trusted Commiters_ getroffen werden müssen, noch das diese die komplette 
Implementierungsarbeit erledigen.

Die Aufgabe einens _Trusted Committers_ ist es die Qualitätsstandards innerhalb ihrer Organisation zu kommunizieren 
und zu erkläutern, vor allem aber sie so zu formulieren, dass sie von ihren https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/master/contributor/01-introduction-article.asciidoc[_Contributors_]
versanden werden können und anwendbar sind. Dies beinhaltet natürlich auch die schriftliche Dokumentation, allerdings es für eine _InnerSource_-Organisation der effektivste Weg 
diese Standards vorzuleben und Beispiele zu geben. 
Wir glauben dass es ein erstrebenswertes Ziel für eine _InnerSource_-Organisation sein sollte, sich nicht nur in der Arbeitsmethodik
 von einer klassischen Entwicklungsorganisation zu unterscheiden, sondern auch in der Qualtät der Software, die sie entwickelt. Softwarequalität auf höchstem 
Niveau ist eine Grundvoraussetzung, um Vertrauen seitens des Managements und der Arbeitsebene in eine  _InnerSource_-Organisationeinheit aufzubauen 
und aufrecht zu erhalten. Wir alle wissen wie schnell dieses Vertrauen durch eine einzige fehlerhafte Ablieferung erschüttert werden kann.

_Trusted Committers_ stellen außerdem sicher, das in der Organisation die notwendige Infrastruktur und die notwendigen Tools vorhanden sind, welche zur Entwicklung qualitativ 
hochwertiger Software benötigt werden.
The peer review, usually
performed as part of pull requests (PRs), is most frequently used to ensure quality. Während für gewöhnlich jedermann auf notwendige 
Verbesserungen hinweisen, von jederman getätigt
werden können, ist es normalerweise nur dem _Trusted Committer_ möglich, Beiträge zu akzeptieren oder abzulehen.
 itrage While everybody can usually start
and participate in pull requests by pointing out necessary improvements,
it is usually only the Trusted Committer who can ultimately accept and merge or reject
a contribution. This is what we meant earlier when we said "Trusted Committers can push code
closer to production." Trusted Committers should also help https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/master/contributor/01-introduction-article.asciidoc[_Contributors_] during
a PR to get their contributions over the finish line.

That said, it is ultimately the contributor's job to make that happen.
The job of a Trusted Committer is not to accept all contributions by default, but to
only accept those that meet the defined criteria in terms of quality and
scope. And Trusted Committers should avoid rewriting a contributor's code to make it
"fit" as much as possible, even if it means spending more time
supporting  https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/master/contributor/01-introduction-article.asciidoc[_Contributors_] in a PR. Trusted Committers
take a long-term perspective and understand that this kind of support is
an investment in the longevity of the community, and it will increase the community's development speed in the long run.

Sometimes project requirements or limitations are not known upfront and are instead
discovered during development. Trusted Committers are also responsible for making sure
these findings are captured and documented for both the https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/master/product-owner/01-opening-article.asciidoc[_Product Owners_] and the
https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/master/contributor/01-introduction-article.asciidoc[_Contributors_].

But the Trusted Committer's purview with respect to quality goes beyond pull requests. 
Trusted Committers think about quality on a strategic level and ensure the
longevity of the software being built. This entails code-oriented
responsibilities from ensuring cleanliness of the code to maintaining
conceptual integrity of the overall software. It also entails
management-oriented tasks such as making sure the community is
given sufficient time to refactor their software or move a release date
in favor of quality improvements, if needed.
The effectiveness of the Trusted Committer is strongly related to code health.

Absent the latter, Trusted Committers will have to spend much of their valuable time
validating and documenting workarounds for bugs or a fragile
architecture and will not have enough time to spend on onboarding and
mentoring https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/master/contributor/01-introduction-article.asciidoc[_Contributors_].

In conclusion, ensuring product quality is a key responsibility of Trusted Committers.
They set quality standards and lead by example. They participate in pull
requests and help https://github.com/InnerSourceCommons/InnerSourceLearningPath/blob/master/contributor/01-introduction-article.asciidoc[_Contributors_] meet
quality standards. They also take responsibility for the long-term
health of the software.
