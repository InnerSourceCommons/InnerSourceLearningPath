WEBVTT
Kind: captions
Language: pt

1
00:00:05.572 --> 00:00:08.274
Oi. Então, este vídeo irá

2
00:00:08.274 --> 00:00:11.745
explicar como Inner Source funciona de um alto nível

3
00:00:12.112 --> 00:00:15.615
e com o desenho de um diagrama que nós usaremos várias vezes para ajudar

4
00:00:15.615 --> 00:00:18.752
as pessoas a entenderem como irá funcionar, nós iremos falar

5
00:00:18.752 --> 00:00:22.555
sobre os papéis comuns que estão envolvidos e como eles interagem.

6
00:00:23.056 --> 00:00:26.826
Então vamos começar com um engenheiro.

7
00:00:27.227 --> 00:00:31.898
Aqui está o engenheiro, e ele está trabalhando na base desse código aqui,

8
00:00:32.399 --> 00:00:34.901
que pode ser uma feature, pode ser uma aplicação,

9
00:00:35.969 --> 00:00:38.705
mas ele precisa mudar alguma coisa

10
00:00:39.072 --> 00:00:43.309
em uma das bases principais do código aqui.

11
00:00:44.177 --> 00:00:47.047
E então ele quer submeter

12
00:00:48.081 --> 00:00:50.283
uma “change request” ou uma “pull request”.

13
00:00:51.084 --> 00:00:53.153
Ele não está submetendo uma “feature request”.

14
00:00:53.153 --> 00:00:56.790
Ele não está solicitando trabalho das pessoas que trabalham na base deste código.

15
00:00:56.990 --> 00:01:00.093
Ele está na verdade dando o código que terá o efeito

16
00:01:00.093 --> 00:01:03.763
que ele está procurando, porque ele lê o código no silo

17
00:01:04.130 --> 00:01:07.100
e ele acha que sabe como consertar para o que ele precisa.

18
00:01:07.333 --> 00:01:09.502
Então ele submete uma pull request.

19
00:01:09.502 --> 00:01:12.405
Agora, o segundo papel é o do “Trusted Committer”.

20
00:01:13.339 --> 00:01:14.707
Aqui está o “Trusted Committer”.

21
00:01:14.707 --> 00:01:16.342
Nós iremos fazer ele como uma mulher.

22
00:01:17.510 --> 00:01:18.945
E a ela

23
00:01:18.945 --> 00:01:22.715
foi atribuído o trabalho durante esse período de trabalho ou essa sprint

24
00:01:23.349 --> 00:01:25.852
para revisar todo o código

25
00:01:25.852 --> 00:01:29.289
que deveria ser mesclado neste código, este silo,

26
00:01:29.622 --> 00:01:33.827
desde que ele venha do pessoal de seu próprio time

27
00:01:34.194 --> 00:01:37.764
ou de alguém que está fora do time, e que está em sua source

28
00:01:37.764 --> 00:01:39.165
quando ela está acontecendo com seu próprio pessoal.

29
00:01:39.165 --> 00:01:40.834
Isso é apenas um trabalho normal.

30
00:01:40.834 --> 00:01:43.403
Apesar disso, nós achamos que adiconar, de vez em quando,

31
00:01:43.403 --> 00:01:47.040
um Trusted Committer ao sistema significa que as revisões do código se tornam reais

32
00:01:47.307 --> 00:01:50.710
porque seu trabalho durante esse período é não aceitar o código

33
00:01:50.910 --> 00:01:55.782
que será difícil de manter porque ela não está aceitando a propriedade.

34
00:01:55.949 --> 00:01:58.485
É como ter um cachorrinho.

35
00:01:58.518 --> 00:02:01.321
Nós iremos falar sobre os papéis de “host” e “guest”.

36
00:02:01.754 --> 00:02:04.691
Então essa pessoa é o guest

37
00:02:04.691 --> 00:02:07.627
nessa transação,
e essa pessoa é o host.

38
00:02:08.161 --> 00:02:10.530
Pense em quando você fica na casa de alguém.

39
00:02:11.164 --> 00:02:14.634
você é o guest, você está chegando e precisa aceitar,

40
00:02:14.634 --> 00:02:17.370
pelo menos até algum ponto, as regras da casa dos hosts.

41
00:02:17.737 --> 00:02:20.673
Então talvez os hosts queiram que você tire seus sapatos antes de caminhar

42
00:02:20.673 --> 00:02:24.477
dentro da casa, e você descobre isso, ou eles te falam.

43
00:02:24.477 --> 00:02:27.313
Sabe, você não é obrigado a descobrir por conta própria.

44
00:02:27.580 --> 00:02:31.284
Geralmente eles te falam se querem que você faça algo diferente e

45
00:02:31.317 --> 00:02:32.552
e você será um bom guest.

46
00:02:32.552 --> 00:02:34.320
Você será gentil e irá fazer o que eles te pedem

47
00:02:34.320 --> 00:02:36.122
contanto que seja razoável.

48
00:02:36.122 --> 00:02:39.092
E então, do lado deles, eles serão bons hosts.

49
00:02:39.092 --> 00:02:41.294
Eles querem que você volte. Eles querem que você esteja confortável.

50
00:02:41.494 --> 00:02:43.863
Então eles serão gentis.

51
00:02:43.863 --> 00:02:47.033
Eles te oferecerão, você sabe, um lugar confortável,

52
00:02:47.367 --> 00:02:50.737
privacidade, qualquer coisa que você precise para ficar confortável em sua casa.

53
00:02:51.237 --> 00:02:54.841
Essa transação é muito similar a o que queremos ver no Inner Source.

54
00:02:55.341 --> 00:02:59.612
Nós queremos que os engenheiros sejam gentis em sua solicitação,

55
00:02:59.612 --> 00:03:03.583
e nós queremos que a Trusted Committer seja gentil em sua resposta

56
00:03:03.583 --> 00:03:06.953
porque isso é, você sabe, discurso civil sendo o que é.

57
00:03:06.953 --> 00:03:09.155
Eles irão além. Os dois irão.

58
00:03:09.155 --> 00:03:11.791
Então esta Trusted Committer irá ler o código

59
00:03:12.091 --> 00:03:15.395
e ela irá devolver alguns comentários escritos.

60
00:03:15.862 --> 00:03:17.897
Isso é uma forma de mentoria.

61
00:03:17.897 --> 00:03:21.768
Ela irá dizer: “Poxa, sinto muito que você tenha usado este método.

62
00:03:21.768 --> 00:03:23.369
Não foi muito bem documentado.

63
00:03:23.369 --> 00:03:26.472
Mas nós saberemos que não irá funcionar na escala que você precisa

64
00:03:26.472 --> 00:03:27.840
que funcione,

65
00:03:27.840 --> 00:03:31.978
ou você não declarou suas variáveis da forma como nós gostaríamos.

66
00:03:31.978 --> 00:03:34.647
Você poderia, por favor, fazer isso

67
00:03:36.015 --> 00:03:38.184
de outra forma possível?

68
00:03:38.184 --> 00:03:40.687
Nós estamos escrevendo a mesma feature e ela irá sair

69
00:03:40.687 --> 00:03:43.523
no próximo lançamento, então talvez você queira usar a nossa.”

70
00:03:43.523 --> 00:03:46.125
Há muitas coisas diferentes que eles podem dizer, mas

71
00:03:46.893 --> 00:03:51.064
o que eles não fazem é reescrever o código, porque agora

72
00:03:51.064 --> 00:03:54.534
este engenheiro tem a possibilidade de submeter novamente

73
00:03:55.268 --> 00:03:59.872
e o Trusted Committer irá comentar, e eles talvez possam ir e vir algumas vezes

74
00:04:00.206 --> 00:04:04.844
antes de chegarem a um lugar onde essa pull request possa ser mesclada.

75
00:04:05.378 --> 00:04:07.580
E isso será ótimo, certo?

76
00:04:08.147 --> 00:04:11.251
Então agora vamos falar sobre mais um papel, que é importante

77
00:04:11.251 --> 00:04:14.654
na maioria das empresas, que é o papel de planejamento.

78
00:04:15.121 --> 00:04:18.992
Então, eu já disse que essa mulher não precisa aceitar nada

79
00:04:18.992 --> 00:04:23.796
que não tenha uma qualidade alta o bastante, ou de alguma forma está fora, à esquerda

80
00:04:23.796 --> 00:04:27.233
do gráfico do que eles estão tentando fazer.

81
00:04:27.767 --> 00:04:30.503
Na maioria das organizações, há o planejamento central

82
00:04:30.503 --> 00:04:34.207
que meio que leva esse discernimento particular

83
00:04:35.375 --> 00:04:37.410
um pouco fora das mãos dela

84
00:04:37.410 --> 00:04:40.179
e coloca nas mãos de alguém chamado Product Owner.

85
00:04:40.947 --> 00:04:43.383
Então o Product Owner, e eles geralmente são simétricos,

86
00:04:43.383 --> 00:04:45.918
geralmente há dois deles,

87
00:04:46.986 --> 00:04:48.488
terão uma conversa

88
00:04:48.488 --> 00:04:51.424
antes desse cara submeter isso.

89
00:04:51.924 --> 00:04:56.462
Numa loja ágil, os Product Owners irão escrever as histórias que serão enviadas

90
00:04:56.462 --> 00:04:59.165
aos engenheiros como: “Aqui está o trabalho que você precisa fazer hoje”.

91
00:04:59.866 --> 00:05:02.869
E em algumas empresas, como o PayPal,

92
00:05:03.102 --> 00:05:07.407
eles também irão dizer, e esse nós achamos que será melhor feito através do Inner Source.

93
00:05:07.874 --> 00:05:10.209
Então um pouco desse trabalho é feito acima do tempo.

94
00:05:10.476 --> 00:05:14.213
Este rapaz já sabe que ele irá submeter a esse lugar,

95
00:05:14.213 --> 00:05:15.982
E essa Trusted Committer já sabe

96
00:05:15.982 --> 00:05:17.750
que uma submissão está chegando.

97
00:05:17.750 --> 00:05:21.621
Isso os ajuda a planejar um pouco melhor e entre os três papéis,

98
00:05:21.854 --> 00:05:24.657
eles podem ter o melhor resultado para todas as partes envolvidas.

99
00:05:24.891 --> 00:05:29.429
Então o código é continuamente bom, de alta qualidade e gerenciável.

100
00:05:29.729 --> 00:05:33.333
então esse indivíduo pode ter seu trabalho feito o mais rápido que ele precisa,

101
00:05:33.599 --> 00:05:37.136
e então toda a empresa pode seguir em frente com os tipos de trabalho

102
00:05:37.136 --> 00:05:39.339
que farão o negócio melhor.

