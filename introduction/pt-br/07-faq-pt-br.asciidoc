 == FAQ

Para concluir o segmento de Introdução da Trilha de Aprendizado, aqui estão algumas Perguntas Frequentes que as pessoas têm ao embarcar em sua jornada InnerSource.

=== Qual é o custo/overhead de manter um projeto InnerSource?
Depende! Um projeto InnerSource que incentiva pequenos pull requests e tem diretrizes de contribuição claras pode exigir pouca sobrecarga, com a maior parte do trabalho sendo revisões de código. Para saber mais sobre as práticas que podem reduzir a necessidade de manutenção de projetos InnerSource, sugerimos que você consulte https://patterns.innersourcecommons.org/[InnerSource Patterns], especialmente:

* https://patterns.innersourcecommons.org/p/30-day-warranty[Garantia de 30 dias]
* https://patterns.innersourcecommons.org/p/service-vs-library[Serviço vs. Biblioteca]
* https://patterns.innersourcecommons.org/p/base-documentation[Documentação base padrão]
* https://patterns.innersourcecommons.org/p/trusted-committer[Trusted Committer]

=== Qual é o custo/overhead de contribuir para um projeto InnerSource?
50% mais esforço para o commit. 100% menos esforço para manter.

=== Por que não apenas código aberto?
Por favor, faça-o se o projeto fizer sentido! Alguns projetos são específicos para sua empresa ou são uma vantagem competitiva, então você vai querer mantê-los como InnerSource. Alguns precisam iterar mais rapidamente do que pode ser feito abertamente.

Se a sua organização não estiver familiarizada com a execução de projetos de código aberto, a InnerSource pode ajudar as pessoas a aprender as habilidades necessárias para abrir o código no futuro.

=== Isso vai nos atrasar?
Depende de quão longe você está indo. Você provavelmente irá muito mais longe do que pensa.

image::https://user-images.githubusercontent.com/9609562/151901209-52b3468b-dedd-4319-9ca3-38b6b2bcfaf5.png[Se você quer ir rápido, vá sozinho. Se quer ir longe, vá acompanhado]

=== Estaremos apenas revisando PRs o dia todo, todos os dias?
Nesse caso, sua equipe principal está com falta de pessoal. Uma equipe saudável é composta de forma que haja tempo para ajudar os colaboradores e fazer contribuições essenciais.

Você pode mitigar isso definindo a expectativa, possivelmente por meio de SLAs. Se os contribuidores esperam revisões de PR em uma hora, talvez você fique parado revisando PRs o tempo todo, mas se você definir um SLA de 1 dia ou 1 semana, esse não será o caso.

=== Como convencemos a gerência de que essa é uma boa ideia?
Descubra o que eles querem e obtenha um https://innersourcecommons.org/stories[exemplo de trabalho do InnerSource], de preferência dentro da sua organização, que mostre que eles estão conseguindo. Se o OSPO/ISPO da sua organização gerencia projetos InnerSource, entre em contato com eles para obter suporte.

=== Como convencemos os engenheiros de que essa é uma boa ideia?
A InnerSource oferece aos engenheiros a oportunidade de desenvolver sua carreira, tanto em termos de habilidades quanto https://patterns.innersourcecommons.org/p/praise-participants[reconhecimento] dentro de sua organização:

* Amplia seu conjunto de habilidades contribuindo para diferentes projetos ou até mesmo diferentes stacks de tecnologia!
* Dimensiona o valor que agregam à organização, fazendo com que seu software seja executado por mais pessoas
* Oportunidade de fazer networking e colaborar com outras pessoas em sua organização que normalmente não fariam

Além disso, muitos engenheiros valorizam o código aberto; O InnerSource adota práticas de código aberto e pode ser um passo em direção ao código aberto para muitos projetos.

=== Quais são as expectativas tanto do anfitrião quanto do colaborador?
Trabalhar juntos! Isso pode ser completamente assíncrono por meio de pull requests ou envolver atualizações regulares da comunidade - o que funcionar para você.

A comunicação e o apoio devem ir em ambas as direções e ser abertos e colaborativos, promovendo uma cultura de segurança psicológica. O feedback sobre contribuições ou código existente deve ser abordado com uma mentalidade de crescimento e como parceria para melhorar as coisas.

=== Como manteremos o controle do projeto?
Por meio das funções Trusted Committer e Product Owner, você ainda pode garantir que o código recebido seja adequado tanto do ponto de vista do produto quanto da engenharia. Você não precisa mesclar o código que não é adequado.

Você também deve definir diretrizes de contribuição claras e ser transparente na direção do projeto. Alguns Padrões que podem ajudar:

* https://patterns.innersourcecommons.org/p/issue-tracker[Casos de uso do rastreador de problemas]
* https://patterns.innersourcecommons.org/p/base-documentation[Documentação base padrão]
* https://patterns.innersourcecommons.org/p/transparent-cross-team-decision-making-using-rfcs[Tomada de decisão transparente entre equipes usando RFCs]


=== Como fazemos com que as pessoas façam contribuições?
Sua equipe e a cultura da organização em geral devem valorizar a colaboração. Concentre-se no valor comercial - as equipes são capazes de se desbloquear onde o software que usam tem bugs ou não possui os recursos necessários. Onde os colaboradores não têm necessidade imediata de negócios, você pode https://patterns.innersourcecommons.org/p/gig-marketplace[anunciar] que está procurando ajuda.