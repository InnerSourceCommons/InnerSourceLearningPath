#Script: The Contributor in InnerSource - Benefits of Contribution

=== Duration: 3-5 Mintes

=== Actors: Isabel and Johannes

=== Playbook Summary

Why make the effort to contribute to an InnerSource project?  Contribution comes with benefits: both to you, your team, and the company at large.  This segment reviews and describes those benefits that you can expect to see.

=== Script

I: In the previous video segment we looked into the mechanics of submitting your
contribution to the host project.
While we did touch upon the motivation for making contributions earlier, in this section we'll dive a bit deeper into why participating in InnerSource projects is beneficial not only for the contributor but also for their team and their employer.

\-> Show individual motivation slide.

J: Contributors are the life blood of inner source projects. What are
motivations for individual contributors to become active?  Much like in open
source: Instead of working around issues, fix them at the source. Typical
scratch your own itch reasoning.  Instead of working in isolation, collaborate
with subject matter experts that you can learn from and that are willing to act
as mentors.

I: Look beyond your own team to learn both technical skills (likely other teams
use slightly different tricks for build management, testing, design or
deployment) and communication skills. On the flip side your own impact and
reputation grows beyond the walls of your own team.

I: Aside from these obvious factors many people observe that being part of an
InnerSource project is perceived as full-filling and fun.

\-> Show team motivation slide.

J: Now we know what motivates individuals to become active in InnerSource projects.
What are reasons for teams to make space for other team members to participate
in host teams?

J: _If you're already using software from the host team. If you've already made
fixes to it. Why should you spend the time to make sure these fixes make their
way back to the host team's project? If you donate them back, with every new
release of that component the fix will already be integrated. Essentially the
host team take over not only ownership of the fix, but also maintenance
associated with it._

I: Having someone active in the host project typically builds a bridge to that team

* it typically makes it easier to have a voice in future direction of that
component.

I: Last but not least, InnerSource can provide a middle path between the "be
independent and (potentially re-)build your own" and "use something existing but
create a dependency to another team's output". Balancing reimplementing and
reusing suddenly becomes easier.

\-> Show corporate motivation slide.

J: All of your teams operate in the same business domain. Likely there is some
level of base functionality that all of these teams need. InnerSource provides a
way to balance centralization and autonomy when creating shared assets that
multiple teams need.

J: The focus on mentorship helps avoid the situation where vital software
components are being maintained by just a single software engineer thus reducing
the risk that come with abandoned components.

I: InnerSource encourages cross team collaboration leading to learning and
knowledge sharing within an organisation.

I: When looking at purely technical benefits, the inherent focus on transparency
and review typically leads to software components of better quality and security
properties.

J: Taken a step further InnerSource can provide a first step towards integrating
project users and customers in the development flow. What is common in most open
source projects: The goal of turning users of a software system into
contributors and collaborators in the past has proven as an option that is
appreciated by customers.

I: We hope those arguments will help you convince colleagues that being an
InnerSource contributor is valuable not only for the individual itself but also
for the team - and even the corporation at large.
