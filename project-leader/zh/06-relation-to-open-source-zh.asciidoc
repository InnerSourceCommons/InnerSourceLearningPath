== 与开源的关系

InnerSource 是开源协作最佳实践在企业范围内的应用。与 InnerSource 对比而言的相似部分，使得团队更容易理解开源的两大方面：

=== 治理水平

与 InnerSource 一样，开源项目也有不同的治理级别。并非所有的开源项目都是一样的： 有些项目组只发布源代码，不希望有任何互动，而有些项目组则希望下游用户积极参与并提交补丁。其他项目则设置了一些程序，允许共享对开源项目的影响。了解这些治理水平意味着，在决定内部使用哪个开源项目时，也要将开源管理考虑在内。InnerSource 项目的下游用户将学会正确评估快速发展但无法影响的项目与慢速推进但能够共同影响的项目之间的平衡。

=== 共建平台

在 InnerSource 项目中工作，可以帮助团队实践分担成本和努力共同构建平台的意义。跨团队共享工作有助于加快整体创新速度：具有不同专注领域的产品团队可以联手更快地开发出所需的基础平台，并分担由此产生的维护工作。

同样的动力也驱动着多个开源项目。理解它意味着对于任何具有 InnerSource 经验的团队来说，参与这些项目是很自然的。从实践经验中了解动态也使团队更容易识别哪些开源项目正在根据这些原则开发。通常，这种理解随后也会对开源项目团队决定在内部使用的内容产生影响。

这样，许多团队需要的平台功能就可以通过协作来创建，而不是一遍又一遍地在本地重新实现。这让我们更容易理解“分工合作”的概念，即如何让每个人都能分得更大的蛋糕，以及如果采用开源的方式而不是只在内部进行，如何帮助推动行业标准的制定。

=== InnerSource 还是 Open Source ？

就机制而言，这两种做法非常相似。主要区别在于项目的可见性：对于 InnerSource 而言，项目的可见性仅限于公司内部，而对于 Open Source 而言，项目的可见性则是公开的。

字面上听起来微不足道的差别，在实践中却是天壤之别。开源意味着每一条信息都是公开可见的，并有可能永久存档。这可能会让不习惯这种工作方式的员工感到不舒服。此外，所有行动的公开意味着它们也可以接受公众的监督——企业的一举一动再也不能由企业传播专家来审查了。同样，在许可证合规性、安全性等方面，生产的人工制品也会受到公众的监督——例如，竞争对手、未来潜在的新员工和客户。

另一方面，它也为企业在外部与其他企业的合作敞开了大门——极端地说，这可能会导致竞争者联手建立一个共同的技术平台，并在此基础上进行创新和相互竞争。

开源还减少了跨法律实体边界合作的税务影响。虽然转让奖励是许多 InnerSource 工作的热门话题，但它与任何开源项目无关。

=== 参与上游——通过分享获益

当谈到积极参与开源领域时，第一个想到的往往是“如何将项目作为开源发布”。当体验过 InnerSource 后就会发现，发布整个项目只是活跃在开源领域的一种方式。

相反，采用开明的自我利益观点更为自然： * 当团队在其组件的重要部分使用某些开源依赖项时，确保参与上游非常重要——即使唯一的目标是了项目解未来的路线图。 * 当团队需要对其所依赖的开源项目进行修改时，InnerSource 的经验使得参与上游的优势显而易见：显然，这不仅涉及“分享即关爱”的心态——而且在贡献时确实具有明显的经济效益，如果团队的变更被集成到了上游，那么他们的后续维护开销就会大大减少。

退一步说，即使是决定内部采纳和使用哪个开源项目，也会受到团队 InnerSource 经验的影响： * InnerSource 培训团队了解在协作和交流方式方面的注意事项——根据个人经验，他们将了解为什么项目必须有清晰、存档、可搜索的交流渠道。他们还将理解为什么每个重大项目决策都必须通过这些沟通渠道做出。 * 了解 InnerSource 中的不同治理级别是一个很好的准备，有助于理解开源项目按照不同开放级别运作的意义。
